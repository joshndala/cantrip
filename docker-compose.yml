services:
  # Next.js Frontend
  cantrip-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://cantrip-backend:8080
    depends_on:
      - cantrip-backend
    networks:
      - cantrip-network
    restart: unless-stopped

  # Go Backend API
  cantrip-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - GIN_MODE=release
      - PORT=8080
      - DOCKER_ENV=true
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
      - GEOAPIFY_API_KEY=${GEOAPIFY_API_KEY}
      - TRIPADVISOR_API_KEY=${TRIPADVISOR_API_KEY}
      - TICKETMASTER_API_KEY=${TICKETMASTER_API_KEY}
      - EVENTBRITE_API_KEY=${EVENTBRITE_API_KEY}
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS}
    volumes:
      - ./backend/data:/app/data
      - ./backend/templates:/app/templates
    depends_on:
      - cantrip-agent
    networks:
      - cantrip-network
    restart: unless-stopped

  # Python LangGraph Agent
  cantrip-agent:
    build:
      context: ./backend/langgraph_agent
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - VERTEX_AI_LOCATION=${VERTEX_AI_LOCATION:-us-central1}
      - GEMINI_FLASH_MODEL=${GEMINI_FLASH_MODEL:-gemini-1.5-flash}
      - GEMINI_PRO_MODEL=${GEMINI_PRO_MODEL:-gemini-1.5-pro}
      - GEMINI_FLASH_LITE_MODEL=${GEMINI_FLASH_LITE_MODEL:-gemini-1.5-flash}
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/application_default_credentials.json
      - PHOENIX_ENABLED=${PHOENIX_ENABLED:-false}
      - PHOENIX_ENDPOINT=${PHOENIX_ENDPOINT:-http://phoenix:6006}
      - AGENT_PORT=8001
      - AGENT_HOST=0.0.0.0
    volumes:
      - ./backend/langgraph_agent/data:/app/data
      - ~/.config/gcloud/application_default_credentials.json:/app/application_default_credentials.json:ro
      - ./backend/langgraph_agent/eval:/app/eval
      - ~/.config/gcloud:/root/.config/gcloud:ro  # Google Cloud auth
      - ./backend/langgraph_agent/phoenix_evaluations.jsonl:/app/phoenix_evaluations.jsonl
    networks:
      - cantrip-network
    restart: unless-stopped

  # Phoenix UI
  phoenix:
    image: arizephoenix/phoenix
    ports:
      - "6006:6006"
    environment:
      - PHOENIX_PROJECT_NAME=cantrip
    volumes:
      - phoenix-data:/phoenix/data
    networks:
      - cantrip-network
    restart: unless-stopped

volumes:
  phoenix-data:

networks:
  cantrip-network:
    driver: bridge 