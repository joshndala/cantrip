version: '3.8'

services:
  # Go Backend API
  cantrip-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - GIN_MODE=release
      - PORT=8080
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
      - GEOAPIFY_API_KEY=${GEOAPIFY_API_KEY}
      - TRIPADVISOR_API_KEY=${TRIPADVISOR_API_KEY}
      - TICKETMASTER_API_KEY=${TICKETMASTER_API_KEY}
      - EVENTBRITE_API_KEY=${EVENTBRITE_API_KEY}
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT}
      - GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS}
    volumes:
      - ./backend/data:/app/data
      - ./backend/templates:/app/templates
    depends_on:
      - cantrip-agent
    networks:
      - cantrip-network
    restart: unless-stopped

  # Python LangGraph Agent
  cantrip-agent:
    build:
      context: ./backend/langgraph_agent
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - VERTEX_AI_LOCATION=${VERTEX_AI_LOCATION:-us-central1}
      - VERTEX_AI_MODEL=${VERTEX_AI_MODEL:-gemini-1.5-flash}
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT}
      - GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS}
      - PHOENIX_ENABLED=${PHOENIX_ENABLED:-false}
      - PHOENIX_ENDPOINT=${PHOENIX_ENDPOINT}
      - AGENT_PORT=8001
      - AGENT_HOST=0.0.0.0
    volumes:
      - ./backend/langgraph_agent/data:/app/data
      - ./backend/langgraph_agent/eval:/app/eval
    networks:
      - cantrip-network
    restart: unless-stopped

  # Redis Cache (Optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - cantrip-network
    restart: unless-stopped

  # PostgreSQL Database (Optional)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=cantrip
      - POSTGRES_USER=cantrip_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-cantrip_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - cantrip-network
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - cantrip-backend
      - cantrip-agent
    networks:
      - cantrip-network
    restart: unless-stopped

volumes:
  redis-data:
  postgres-data:

networks:
  cantrip-network:
    driver: bridge 